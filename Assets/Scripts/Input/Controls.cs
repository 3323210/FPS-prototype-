//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f447f3e3-9f18-49e5-97c6-483a569969eb"",
            ""actions"": [
                {
                    ""name"": ""MoveWASD"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6700d9cd-5959-4d4c-b46d-f089feb25d6c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveDir"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e5e4685a-4bdd-49a7-b3a4-95da499e9e27"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Atak"",
                    ""type"": ""Button"",
                    ""id"": ""26482375-a722-47ff-bec4-4cf6b7cd9f38"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponKnife"",
                    ""type"": ""Button"",
                    ""id"": ""801845df-2b50-46fe-ac68-a809ed294afe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponGun"",
                    ""type"": ""Button"",
                    ""id"": ""61e348a5-6b5d-47f7-9277-f906827575ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponShotGun"",
                    ""type"": ""Button"",
                    ""id"": ""a27e891d-eb8f-4fb2-9bed-94ffca03c991"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponMachineGun"",
                    ""type"": ""Button"",
                    ""id"": ""e06b8a36-34d3-43d9-b881-0199a035a6aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c7185122-12d3-4c71-b016-357d3a4cc430"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6ad51ede-09f5-4b2a-b723-00972b8b3786"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8b039e77-f647-44ca-a2eb-8bbd3344a3d8"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9787f605-61e0-4713-a723-c5c9e287c6d9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5b8244e7-7c5d-4818-83fc-dee66c4a3ebd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveWASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0e2198a7-db7e-4fff-92a9-ae2e6046d17f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Atak"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c8a92500-1d7b-4a3a-814c-6bed61b38c39"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDir"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""88347b3b-5290-4bc5-bbb7-8f1acbcba50e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""af1bce44-1248-4ea0-8a29-bf35b28d0042"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""754d557c-5537-4962-9013-038c4724d8af"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e3cd4d72-b124-4077-ab41-af3c8ca269c7"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e6d365d6-60ef-404e-8674-7cf8576c013e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponKnife"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""742dc9d7-22b8-4cca-bc94-3d9064203d92"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca7e6453-1459-42bf-a461-d8e871d10cdb"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponShotGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a9ebe88e-5cb0-4a89-a5d4-6a177e08fcbc"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponMachineGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_MoveWASD = m_Player.FindAction("MoveWASD", throwIfNotFound: true);
        m_Player_MoveDir = m_Player.FindAction("MoveDir", throwIfNotFound: true);
        m_Player_Atak = m_Player.FindAction("Atak", throwIfNotFound: true);
        m_Player_WeaponKnife = m_Player.FindAction("WeaponKnife", throwIfNotFound: true);
        m_Player_WeaponGun = m_Player.FindAction("WeaponGun", throwIfNotFound: true);
        m_Player_WeaponShotGun = m_Player.FindAction("WeaponShotGun", throwIfNotFound: true);
        m_Player_WeaponMachineGun = m_Player.FindAction("WeaponMachineGun", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_MoveWASD;
    private readonly InputAction m_Player_MoveDir;
    private readonly InputAction m_Player_Atak;
    private readonly InputAction m_Player_WeaponKnife;
    private readonly InputAction m_Player_WeaponGun;
    private readonly InputAction m_Player_WeaponShotGun;
    private readonly InputAction m_Player_WeaponMachineGun;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveWASD => m_Wrapper.m_Player_MoveWASD;
        public InputAction @MoveDir => m_Wrapper.m_Player_MoveDir;
        public InputAction @Atak => m_Wrapper.m_Player_Atak;
        public InputAction @WeaponKnife => m_Wrapper.m_Player_WeaponKnife;
        public InputAction @WeaponGun => m_Wrapper.m_Player_WeaponGun;
        public InputAction @WeaponShotGun => m_Wrapper.m_Player_WeaponShotGun;
        public InputAction @WeaponMachineGun => m_Wrapper.m_Player_WeaponMachineGun;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @MoveWASD.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveWASD;
                @MoveWASD.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveWASD;
                @MoveWASD.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveWASD;
                @MoveDir.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveDir;
                @MoveDir.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveDir;
                @MoveDir.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveDir;
                @Atak.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAtak;
                @Atak.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAtak;
                @Atak.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAtak;
                @WeaponKnife.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponKnife;
                @WeaponKnife.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponKnife;
                @WeaponKnife.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponKnife;
                @WeaponGun.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponGun;
                @WeaponGun.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponGun;
                @WeaponGun.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponGun;
                @WeaponShotGun.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponShotGun;
                @WeaponShotGun.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponShotGun;
                @WeaponShotGun.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponShotGun;
                @WeaponMachineGun.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponMachineGun;
                @WeaponMachineGun.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponMachineGun;
                @WeaponMachineGun.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponMachineGun;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveWASD.started += instance.OnMoveWASD;
                @MoveWASD.performed += instance.OnMoveWASD;
                @MoveWASD.canceled += instance.OnMoveWASD;
                @MoveDir.started += instance.OnMoveDir;
                @MoveDir.performed += instance.OnMoveDir;
                @MoveDir.canceled += instance.OnMoveDir;
                @Atak.started += instance.OnAtak;
                @Atak.performed += instance.OnAtak;
                @Atak.canceled += instance.OnAtak;
                @WeaponKnife.started += instance.OnWeaponKnife;
                @WeaponKnife.performed += instance.OnWeaponKnife;
                @WeaponKnife.canceled += instance.OnWeaponKnife;
                @WeaponGun.started += instance.OnWeaponGun;
                @WeaponGun.performed += instance.OnWeaponGun;
                @WeaponGun.canceled += instance.OnWeaponGun;
                @WeaponShotGun.started += instance.OnWeaponShotGun;
                @WeaponShotGun.performed += instance.OnWeaponShotGun;
                @WeaponShotGun.canceled += instance.OnWeaponShotGun;
                @WeaponMachineGun.started += instance.OnWeaponMachineGun;
                @WeaponMachineGun.performed += instance.OnWeaponMachineGun;
                @WeaponMachineGun.canceled += instance.OnWeaponMachineGun;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMoveWASD(InputAction.CallbackContext context);
        void OnMoveDir(InputAction.CallbackContext context);
        void OnAtak(InputAction.CallbackContext context);
        void OnWeaponKnife(InputAction.CallbackContext context);
        void OnWeaponGun(InputAction.CallbackContext context);
        void OnWeaponShotGun(InputAction.CallbackContext context);
        void OnWeaponMachineGun(InputAction.CallbackContext context);
    }
}
